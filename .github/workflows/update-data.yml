# Unique name for this workflow
name: update-data

# How the workflow starts
# manual
# schedule: At 05:00 on Monday https://crontab.guru/#0_5_*_*_1
on:
  workflow_dispatch:
    inputs:
      description:
        description: 'description for this manual action'
  schedule:
    - cron: '0 5 * * 1'

# Jobs to be executed
jobs:
  update-data:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: NPM install
        run: npm ci

      - name: Create .env file
        run: |
          touch .env
          echo GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} >> .env
          echo PLAYLIST_ID=${{ secrets.PLAYLIST_ID }} >> .env
          echo FBK_PLAYLIST_ID=${{ secrets.FBK_PLAYLIST_ID }} >> .env

      - name: Start update data script
        id: update
        run: |
          git config user.email "${{ secrets.GH_EMAIL }}"
          git config user.name "hanabiiii"
          npm run update-data
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          PLAYLIST_ID: ${{ secrets.PLAYLIST_ID }}
          FBK_PLAYLIST_ID: ${{ secrets.FBK_PLAYLIST_ID }}

      - name: Create Pull Request
        if: ${{ success() }}
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Update timeline data
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: data
          base: main
          delete-branch: true
          title: 'Update timeline data'
          body: |
            Update timeline data
            - Updated data last week
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            data
            automated pr
          assignees: hanabiiii
          reviewers: hanabiiii
          team-reviewers: |
            owners
            maintainers
          draft: false

      - name: Check outputs
        if: ${{ success() }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      # delete branch on creating pull request error
      # - name: Clean-up
      #   if: ${{ steps.update.outcome == 'failure' }}
      #   run: git push origin --delete data

      - name: Report
        if: ${{ always() }}
        run: |
          echo "Done!"